name: CI
on:
  push:
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        task: [ compat ]
        compile-java: [ 11, 17 ]
        runtime-java:
          - 8   # baseline
          - 9   # Jigsaw / module JAXB and javax.annotation bundled
          - 11  # LTS / modules no longer bundled
          - 17  # LTS
        include:
          - { task: codegen, compile-java: 11 }
          - { task: codegen, compile-java: 17 }
          - { task: checker, compile-java: 11 }
          - { task: checker, compile-java: 17 }
          - { task: test, compile-java: 11 }
          - { task: test, compile-java: 17 }
          - { task: mdoc, compile-java: 11 }
    env:
      JAVA_OPTS: -Xmx3G -Xss6M -Dfile.encoding=utf8
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: "zulu@1.${{ matrix.compile-java }}"
      - uses: coursier/cache-action@v6

      - name: Install runtime Java
        if: ${{ matrix.task == 'compat' }}
        env:
          RUNTIME_JAVA: "zulu@1.${{ matrix.runtime-java }}"
        run: |
          RUNTIME_JAVA="$(jabba ls-remote | grep "${RUNTIME_JAVA}." | head -n 1)"
          echo "Installing ${RUNTIME_JAVA}"
          jabba install "${RUNTIME_JAVA}"
          echo "RUNTIME_JAVA_HOME=$(jabba which --home "${RUNTIME_JAVA}")" >> $GITHUB_ENV

      - name: Build and test
        run: |
          case ${{ matrix.task }} in
            codegen)
              sbt -v "codegen/scripted jooq-codegen/*"
              ;;
            compat)
              sbt -v "codegen/scripted jooq-codegen-compat/*"
              ;;
            checker)
              sbt -v "checker/scripted jooq-checker/*"
              ;;
            test)
              sbt -v test
              ;;
            mdoc)
              sbt -v "docs/mdoc"
              ;;
            *)
              echo "unknown task"
              exit 1
          esac

      - name: Delete non-cached files
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/.sbt             -name "*.lock"                -delete || true
          find $HOME/.ivy2/cache      -name "ivydata-*.properties"  -delete || true
          find $HOME/.cache/coursier  -name "ivydata-*.properties"  -delete || true
