name: CI
on:
  push:
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        task: [ core, checker, codegen, compat, flyway ]
        scripted-java:
          - 8   # baseline
          - 9   # Jigsaw / JAXB and javax.annotation bundled
          - 11  # LTS / JAXB and javax.annotation no longer bundled
          - 17  # LTS
        scripted-scala:
          - 3.2.1
          - 2.13.10
        include:
          - task: test
          - { task: checker, scripted-java: 17, scripted-scala: 2.12.17 }
        exclude:
          - { task: core, scripted-java: 8 }
          - { task: core, scripted-java: 9 }
          - { task: core, scripted-java: 11 }
          - { task: checker, scripted-java: 8 }
          - { task: checker, scripted-java: 9 }
          - { task: checker, scripted-java: 11 }
          - { task: codegen, scripted-java: 8 }
          - { task: codegen, scripted-java: 9 }
          - { task: codegen, scripted-java: 11 }
          - { task: flyway, scripted-java: 8 }
          - { task: flyway, scripted-java: 9 }
          - { task: flyway, scripted-java: 11 }
    env:
      JAVA_OPTS: -Xmx3G -Xss6M -Dfile.encoding=utf8
    steps:
      - uses: actions/checkout@v3
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: "zulu@1.17"
      - uses: coursier/cache-action@v6

      - name: Install Java for scripted
        if: ${{ matrix['scripted-java'] != null }}
        env:
          SCRIPTED_JAVA: "zulu@1.${{ matrix.scripted-java }}"
        run: |
          SCRIPTED_JAVA="$(jabba ls-remote | grep "${SCRIPTED_JAVA}\." | head -n 1)"
          echo "Installing ${SCRIPTED_JAVA}"
          jabba install "${SCRIPTED_JAVA}"
          echo "SCRIPTED_JAVA_HOME=$(jabba which --home "${SCRIPTED_JAVA}")" >> $GITHUB_ENV

      - name: Build and test
        if: ${{ matrix.task == 'test' }}
        run: |
          sbt -v +test docs/mdoc +scalafmtCheckAll scalafmtSbtCheck +headerCheckAll

      - name: Build and scripted
        if: ${{ matrix.task != 'test' }}
        env:
          CI_TASK: ${{ matrix.task }}
          SCRIPTED_SCALA: ${{ matrix.scripted-scala }}
        run: |
          case "$CI_TASK" in
            core)
              sbt -v "core/scripted jooq/*"
              ;;
            checker)
              sbt -v "++${SCRIPTED_SCALA}" "checker/scripted jooq-checker/*"
              ;;
            codegen)
              sbt -v "codegen/scripted jooq-codegen/*"
              ;;
            compat)
              sbt -v "codegen/scripted jooq-versions/*"
              ;;
            flyway)
              sbt -v "codegen/scripted it-flyway-sbt/*"
              ;;
            *)
              echo "unknown task"
              exit 1
          esac

      - name: Cleanup
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/.sbt             -name "*.lock"                -delete || true
          find $HOME/.ivy2/cache      -name "ivydata-*.properties"  -delete || true
          find $HOME/.cache/coursier  -name "ivydata-*.properties"  -delete || true
